/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Characters.Person;
import Characters.Team;
import Controller.Controller;
import Controller.Game;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.Robot;
import java.awt.event.InputEvent;
import java.io.Serializable;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 *
 * @author Lucas Tobal
 */
public class Map extends javax.swing.JFrame implements MouseListener, MouseMotionListener, ActionListener {

    private JPanel CanvasD;
    Robot r;
    private Controller controller;
    private Iterator<Person> i;
    private Person p;
    private int x;
    private int y;
    Game game;
    private int team_size;

    //private static JPanel ;
    /**
     * Creates new form Map
     */
    @SuppressWarnings("LeakingThisInConstructor")
    public Map() {
        team_size = 2;
        game = new Game(team_size, 100, 100, 50, 50);
        CanvasD = new Paint(game);
        CanvasD.addMouseListener(this);//Adiciona evento de mouse ao Painel de desenho
        CanvasD.addMouseMotionListener(this);

        initComponents();
        repaint();
        //initGame();

    }

    public synchronized void initGame() {
        i = game.getPerson().iterator();

        new Thread() {
            public synchronized void run() {
                while (!game.isFinished()) {
                    p = i.next();
                    if (p.getLife()>0) {
                        controller = p.getController();
                        waiting();
                        if (!i.hasNext()) {
                            i = game.getPerson().iterator();
                        }
                    }
                    else{
                        if (!i.hasNext()) {
                            i = game.getPerson().iterator();
                        }
                    }
                    repaint();
                }
                System.out.println("ACABOU");
                this.stop();
            }
        }.start();
        
    }

    /**
     * ad
     */
    private synchronized void waiting() {
        try {
            jDialogAction.setLocation(controller.p.getPos_x() + getX(), controller.p.getPos_y() + getY());
            jDialogAction.setVisible(true);

            wait();
        } catch (InterruptedException ex) {
            Logger.getLogger(Map.class.getName()).log(Level.SEVERE, null, ex);
        }


    }

    private synchronized void waiting2() {

        game.verifyDead(p);
        notifyAll();



    }

    private synchronized void finished() {
        this.notifyAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogAction = new javax.swing.JDialog();
        jButtonDefend = new javax.swing.JButton();
        jButtonAttack = new javax.swing.JButton();
        jButtonHeal = new javax.swing.JButton();
        jButtonMove = new javax.swing.JButton();
        jPanel1 = CanvasD;
        jLabelTeam1Life = new javax.swing.JLabel();
        jLabelTeam1Attack = new javax.swing.JLabel();
        jLabelTeam1Defend = new javax.swing.JLabel();
        jLabelTeam1Heal = new javax.swing.JLabel();
        jLabelTeam1Y = new javax.swing.JLabel();
        jLabelTeam1X = new javax.swing.JLabel();
        jLabelTeam2Life = new javax.swing.JLabel();
        jLabelTeam2Y = new javax.swing.JLabel();
        jLabelTeam2Heal = new javax.swing.JLabel();
        jLabelTeam2Defend = new javax.swing.JLabel();
        jLabelTeam2Attack = new javax.swing.JLabel();
        jLabelTeam2X = new javax.swing.JLabel();

        jDialogAction.setMaximumSize(new java.awt.Dimension(350, 45));
        jDialogAction.setMinimumSize(new java.awt.Dimension(350, 45));
        jDialogAction.setName("Action"); // NOI18N
        jDialogAction.setUndecorated(true);

        jButtonDefend.setText("Defend");
        jButtonDefend.setMaximumSize(new java.awt.Dimension(63, 23));
        jButtonDefend.setMinimumSize(new java.awt.Dimension(63, 23));
        jButtonDefend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDefendMouseClicked(evt);
            }
        });

        jButtonAttack.setText("Attack");
        jButtonAttack.setMaximumSize(new java.awt.Dimension(67, 23));
        jButtonAttack.setMinimumSize(new java.awt.Dimension(67, 23));
        jButtonAttack.setPreferredSize(new java.awt.Dimension(67, 23));
        jButtonAttack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAttackMouseClicked(evt);
            }
        });

        jButtonHeal.setText("Heal");
        jButtonHeal.setMaximumSize(new java.awt.Dimension(67, 23));
        jButtonHeal.setMinimumSize(new java.awt.Dimension(67, 23));
        jButtonHeal.setPreferredSize(new java.awt.Dimension(67, 23));
        jButtonHeal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonHealMouseClicked(evt);
            }
        });

        jButtonMove.setText("Move");
        jButtonMove.setMaximumSize(new java.awt.Dimension(67, 23));
        jButtonMove.setMinimumSize(new java.awt.Dimension(67, 23));
        jButtonMove.setPreferredSize(new java.awt.Dimension(67, 23));
        jButtonMove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonMoveMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDialogActionLayout = new javax.swing.GroupLayout(jDialogAction.getContentPane());
        jDialogAction.getContentPane().setLayout(jDialogActionLayout);
        jDialogActionLayout.setHorizontalGroup(
            jDialogActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogActionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonAttack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonDefend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonHeal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonMove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jDialogActionLayout.setVerticalGroup(
            jDialogActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogActionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAttack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonHeal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDefend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMaximumSize(null);
        setMinimumSize(new java.awt.Dimension(850, 850));
        setResizable(false);

        jPanel1.setMaximumSize(new java.awt.Dimension(800, 800));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 800));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTeam1Life, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam1Attack, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam1Defend, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam1Heal, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam1X, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam1Y, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam2Life, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam2Attack, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam2Defend, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam2Heal, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam2X, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTeam2Y, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabelTeam2Life, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTeam2Attack, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTeam2Defend, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTeam2Heal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTeam2X, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTeam2Y, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTeam1Life, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTeam1Attack, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTeam1Defend, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTeam1Heal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTeam1X, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTeam1Y, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDefendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDefendMouseClicked
        controller.Defend();
        jDialogAction.setVisible(false);
        finished();
    }//GEN-LAST:event_jButtonDefendMouseClicked

    private void jButtonAttackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAttackMouseClicked
        jDialogAction.setVisible(false);
        finished();
    }//GEN-LAST:event_jButtonAttackMouseClicked

    private void jButtonHealMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonHealMouseClicked
        controller.Heal();
        jDialogAction.setVisible(false);
        finished();
    }//GEN-LAST:event_jButtonHealMouseClicked

    private void jButtonMoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMoveMouseClicked
        controller.p.setLife(-1);
        jDialogAction.setVisible(false);
        finished();
    }//GEN-LAST:event_jButtonMoveMouseClicked
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAttack;
    private javax.swing.JButton jButtonDefend;
    private javax.swing.JButton jButtonHeal;
    private javax.swing.JButton jButtonMove;
    private javax.swing.JDialog jDialogAction;
    private javax.swing.JLabel jLabelTeam1Attack;
    private javax.swing.JLabel jLabelTeam1Defend;
    private javax.swing.JLabel jLabelTeam1Heal;
    private javax.swing.JLabel jLabelTeam1Life;
    private javax.swing.JLabel jLabelTeam1X;
    private javax.swing.JLabel jLabelTeam1Y;
    private javax.swing.JLabel jLabelTeam2Attack;
    private javax.swing.JLabel jLabelTeam2Defend;
    private javax.swing.JLabel jLabelTeam2Heal;
    private javax.swing.JLabel jLabelTeam2Life;
    private javax.swing.JLabel jLabelTeam2X;
    private javax.swing.JLabel jLabelTeam2Y;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
    }

    @Override
    public void mousePressed(MouseEvent e) {
        System.out.println(e.getX() + " " + e.getY());
        /* x = e.getX();//pega as coordenadas do mouse
         y = e.getY();
         if (e.getButton() == MouseEvent.BUTTON1 && clickr == 0 && clickl == 0) {
         if (controller1.isMyTurn() == true) {
         char1 = controller1.selectChar(x, y);
         if (char1 == -1) {
         System.out.println("NOT YOUR CHARACTER");
         } else {
         clickr = 1;
         }


         } else {
         char1 = controller2.selectChar(x, y);
         if (char1 == -1) {
         System.out.println("NOT YOUR CHARACTER");
         } else {
         clickr = 1;
         }

         }
         repaint();
         } else if (e.getButton() == MouseEvent.BUTTON1 && clickr == 1 && clickl == 0) {
         if (controller1.isMyTurn() == true) {
         controller1.team.getTeamMember(char1).Move(e.getX(), e.getY());
         clickr = 0;
         controller1.setMyTurn(false);
         controller2.setMyTurn(true);
         repaint();
         } else {
         controller2.team.getTeamMember(char1).Move(e.getX(), e.getY());
         clickr = 0;
         controller1.setMyTurn(true);
         controller2.setMyTurn(false);
         repaint();
         }

         } else if (e.getButton() == MouseEvent.BUTTON3 && clickl == 0 && clickr == 0) {

         if ((((controller1.isMyTurn() == true) && (controller1.selectChar(e.getX(), e.getY()) != -1)) || ((controller1.isMyTurn() == false) && (controller2.selectChar(e.getX(), e.getY()) != -1)))) {
         if (controller1.isMyTurn()) {
         char1 = controller1.selectChar(e.getX(), e.getY());
         } else {
         char1 = controller2.selectChar(e.getX(), e.getY());
         }
         jDialogAction.setLocation(this.getX() + e.getX(), this.getY() + e.getY());
         jDialogAction.setVisible(true);
         clickl = 1;

         }

         } else if (e.getButton() == MouseEvent.BUTTON3 && clickl == 1 && clickr == 0) {
         System.out.println("AQUI");
         if (controller1.isMyTurn() == true) {
         char2 = controller2.selectChar(e.getX(), e.getY());
         if (char1 == -1) {
         } else {
         controller1.team.getTeamMember(char1).Attack(controller2.team.getTeamMember(char2));
         System.out.println("2 " + controller2.team.getTeamMember(char2).getLife());
         controller2.verifyDead();
         controller1.setMyTurn(false);
         controller2.setMyTurn(true);
         clickr = 0;
         clickl = 0;
         repaint();
         if (controller2.iLost()) {
         System.out.println("Player 1 WON");
         }
         }

         } else {
         char2 = controller1.selectChar(e.getX(), e.getY());
         if (char1 == -1) {
         } else {
         controller2.team.getTeamMember(char1).Attack(controller1.team.getTeamMember(char2));
         System.out.println("1 " + controller1.team.getTeamMember(char2).getLife());

         controller1.verifyDead();
         controller2.setMyTurn(false);
         controller1.setMyTurn(true);
         clickr = 0;
         clickl = 0;
         repaint();

         if (controller1.iLost()) {
         System.out.println("Player 2 WON");
         }
         }
         }
         }*/
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

    @Override
    public void mouseDragged(MouseEvent e) {
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        /*   if (controller1.selectChar(e.getX(), e.getY()) != -1) {
         char1 = controller1.selectChar(e.getX(), e.getY());
         jLabelTeam1Life.setText(String.valueOf(controller1.team.getTeamMember(char1).getLife()));
         jLabelTeam1Attack.setText(String.valueOf(controller1.team.getTeamMember(char1).getAttack()));
         jLabelTeam1Defend.setText(String.valueOf(controller1.team.getTeamMember(char1).getDefend()));
         jLabelTeam1Heal.setText(String.valueOf(controller1.team.getTeamMember(char1).getHeal()));
         jLabelTeam1X.setText(String.valueOf(controller1.team.getTeamMember(char1).getPos_x()));
         jLabelTeam1Y.setText(String.valueOf(controller1.team.getTeamMember(char1).getPos_y()));

         } else if (controller2.selectChar(e.getX(), e.getY()) != -1) {
         char1 = controller2.selectChar(e.getX(), e.getY());
         jLabelTeam2Life.setText(String.valueOf(controller2.team.getTeamMember(char1).getLife()));
         jLabelTeam2Attack.setText(String.valueOf(controller2.team.getTeamMember(char1).getAttack()));
         jLabelTeam2Defend.setText(String.valueOf(controller2.team.getTeamMember(char1).getDefend()));
         jLabelTeam2Heal.setText(String.valueOf(controller2.team.getTeamMember(char1).getHeal()));
         jLabelTeam2X.setText(String.valueOf(controller2.team.getTeamMember(char1).getPos_x()));
         jLabelTeam2Y.setText(String.valueOf(controller2.team.getTeamMember(char1).getPos_y()));
         }*/
    }

    @Override
    public void actionPerformed(ActionEvent e) {
    }
}
